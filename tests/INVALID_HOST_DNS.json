{
  "id": "INVALID_HOST_DNS",
  "initial": "INITIALIZING",
  "states": {
    "INITIALIZING": {
      "on": {
        "STARTED": [
          {
            "target": "INITIATING_CONTROL_CHANNEL",
            "actions": []
          }
        ]
      }
    },
    "INITIATING_CONTROL_CHANNEL": {
      "entry": [
        {
          "type": "get_from_file (variables role) (role)"
        },
        {
          "type": "get_from_file (variables controller_conf_filename) (controller_conf_filename)"
        },
        {
          "type": "call (CONTROL_CHANNEL_SET_UP role controller_conf_filename) (event ctrl)"
        },
        {
          "type": "get_from_file (variables client) (client)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "CONTROL_CHANNEL_READY": [
          {
            "target": "SENDING_FIRST_QUERY",
            "cond": "equal (role client)",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          },
          {
            "target": "LISTENING",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          }
        ]
      }
    },
    "SENDING_FIRST_QUERY": {
      "entry": [
        {
          "type": "get_from_file (variables ip) (ip)"
        },
        {
          "type": "get_from_file (variables query) (query)"
        },
        {
          "type": "get_from_file (variables port) (port)"
        },
        {
          "type": "create_DNS_packet (pkt)"
        },
        {
          "type": "set_IP_dst (pkt ip) (pkt)"
        },
        {
          "type": "set_UDP_sport (pkt port) (pkt)"
        },
        {
          "type": "create_DNS_query(qname)"
        },
        {
          "type": "set_query_name (qname query) (qname)"
        },
        {
          "type": "add_DNS_query_to_DNS_packet (pkt qname) (pkt)"
        },
        {
          "type": "set_DNS_packet_query (pkt) (pkt)"
        },
        {
          "type": "create_dict (dict)"
        },
        {
          "type": "set (true) (query_sent)"
        },
        {
          "type": "add_element_to_dict (dict query_sent) (dict)"
        },
        {
          "type": "send (pkt)"
        }
      ],
      "on": {
        "PACKET_SENT": [
          {
            "target": "LISTENING (copy)",
            "actions": [
              {
                "type": "assign (dict) (dict)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          }
        ]
      }
    },
    "LISTENING": {
      "entry": [
        {
          "type": "get_from_file (variables filter) (filter)"
        },
        {
          "type": "packet_filter (filter)"
        },
        {
          "type": "set (2) (timeout)"
        },
        {
          "type": "listen (queue)"
        },
        {
          "type": "wait_packet_signal (queue timeout)"
        }
      ],
      "on": {
        "PACKET_AVAILABLE": [
          {
            "target": "PACKET_RECIEVED",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (queue) (queue)"
              }
            ]
          }
        ],
        "TIMEOUT": [
          {
            "target": "TIMEOUT_ENDING (copy)",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          }
        ]
      }
    },
    "LISTENING (copy)": {
      "entry": [
        {
          "type": "get_from_file (variables filter) (filter)"
        },
        {
          "type": "packet_filter (filter)"
        },
        {
          "type": "set (3) (timeout)"
        },
        {
          "type": "listen (queue)"
        },
        {
          "type": "wait_packet_signal (queue timeout)"
        }
      ],
      "on": {
        "TIMEOUT": [
          {
            "target": "TIMEOUT_ENDING",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (dict) (dict)"
              }
            ]
          }
        ],
        "PACKET_AVAILABLE": [
          {
            "target": "New state 1",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (dict) (dict)"
              }
            ]
          }
        ]
      }
    },
    "PACKET_RECIEVED": {
      "entry": [
        {
          "type": "set (true) (query_received)"
        },
        {
          "type": "create_dict (dict)"
        },
        {
          "type": "add_element_to_dict (dict query_received) (dict)"
        },
        {
          "type": "get_first_element (queue) (pkt)"
        },
        {
          "type": "get_DNS_transaction_id (pkt) (txid)"
        },
        {
          "type": "get_DNS_transaction_id (pkt) (txid)"
        },
        {
          "type": "get_DNS_query_from_DNS_packet (pkt) (cquery)"
        },
        {
          "type": "get_query_name (cquery) (client_query)"
        },
        {
          "type": "get_IP_src (pkt) (cip)"
        },
        {
          "type": "get_UDP_sport (pkt) (sport)"
        },
        {
          "type": "get_UDP_dport (pkt) (dport)"
        },
        {
          "type": "create_DNS_packet (rpacket)"
        },
        {
          "type": "set_IP_dst (rpacket cip) (rpacket)"
        },
        {
          "type": "set_UDP_sport (rpacket dport) (rpacket)"
        },
        {
          "type": "set_UDP_dport (rpacket sport) (rpacket)"
        },
        {
          "type": "set_DNS_transaction_id (rpacket txid) (rpacket)"
        },
        {
          "type": "set_DNS_packet_response (rpacket) (rpacket)"
        },
        {
          "type": "create_DNS_query (rquery)"
        },
        {
          "type": "set_query_name (rquery client_query) (rquery)"
        },
        {
          "type": "add_DNS_query_to_DNS_packet (rpacket rquery) (rpkt)"
        },
        {
          "type": "create_DNS_resource_record (rr)"
        },
        {
          "type": "set_DNS_resource_record_domain (rr client_query) (rr)"
        },
        {
          "type": "set (127.0.0.1) (ip)"
        },
        {
          "type": "set_DNS_resource_record_value (rr ip) (rr)"
        },
        {
          "type": "add_DNS_response_to_answer (rpacket rr) (rpacket)"
        },
        {
          "type": "set (true) (dns_response_sent)"
        },
        {
          "type": "add_element_to_dict (dict dns_response_sent) (dict)"
        },
        {
          "type": "set (2) (time)"
        },
        {
          "type": "wait (time)"
        },
        {
          "type": "send (rpacket)"
        }
      ],
      "on": {
        "PACKET_SENT": [
          {
            "target": "EXCHANGE_SYNC",
            "actions": [
              {
                "type": "assign (dict) (dict)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          }
        ]
      }
    },
    "TIMEOUT_ENDING (copy)": {
      "entry": [
        {
          "type": "set (false) (query_received)"
        },
        {
          "type": "create_dict (dict)"
        },
        {
          "type": "add_element_to_dict (dict query_received ) (dict)"
        },
        {
          "type": "done"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "EXCHANGE_SYNC",
            "actions": [
              {
                "type": "assign (dict) (dict)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          }
        ]
      }
    },
    "TIMEOUT_ENDING": {
      "entry": [
        {
          "type": "set (false) (response_received)"
        },
        {
          "type": "add_element_to_dict (dict response_received ) (dict)"
        },
        {
          "type": "done"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "EXCHANGE_SYNC (copy)",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (dict) (dict)"
              }
            ]
          }
        ]
      }
    },
    "New state 1": {
      "entry": [
        {
          "type": "set (true) (response_received)"
        },
        {
          "type": "add_element_to_dict (dict response_received) (dict)"
        },
        {
          "type": "done"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "EXCHANGE_SYNC (copy)",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (dict) (dict)"
              }
            ]
          }
        ]
      }
    },
    "EXCHANGE_SYNC": {
      "entry": [
        {
          "type": "call (EXCHANGE_SYNC ctrl dict) (event sync_dict)"
        },
        {
          "type": "done"
        }
      ]
    },
    "EXCHANGE_SYNC (copy)": {
      "entry": {
        "type": "call (EXCHANGE_SYNC ctrl dict) (event sync_dict)"
      }
    }
  }
}
